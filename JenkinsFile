pipeline {
    agent any

    environment {
        MYSQL_DB_HOST = 'mysqldb'
        MYSQL_DB_PORT = '3306'
        MYSQL_DB_DNAME = 'mydatabase'
        MYSQL_DB_PASSWORD = 'rootpassword'
        SONAR_HOME = tool 'sonarqube'
        DOCKER_REPO = 'amdevops36/enhancedcicd'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    git branch: 'master', url: 'https://github.com/am36166/Spring-Boot-App.git'
                }
            }
        }

        stage('Build and Install') {
            steps {
                script {
                    bat 'mvn install -DskipTests'
                }
            }
        }

        stage('OWASP Dependency-Check Vulnerabilities') {
            steps {
                script {
                    dependencyCheck additionalArguments: '''
                        -o "./"
                        -s "./"
                        -f "ALL"
                        --prettyPrint''', odcInstallation: 'owsap-dependancy-check'

                    dependencyCheckPublisher pattern: 'dependency-check-report.xml'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    withSonarQubeEnv() {
                        bat label: '', script: "${env.SONAR_HOME}\\bin\\sonar-scanner.bat -Dsonar.projectName=CI-CD -Dsonar.java.binaries=. -Dsonar.projectKey=CI-CD"
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat 'docker build -t app  . '
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'Docker_Hub_Credentiels') {
                        bat "docker tag app ${env.DOCKER_REPO}:latest"
                        bat "docker push ${env.DOCKER_REPO}:latest"
                    }
                }
            }
        }

        stage('Security Scan with Trivy') {
            steps {
                script {
                    bat '"C:\\Users\\lenovo\\Desktop\\trivy_0.50.4_windows-64bit\\trivy.exe" image amdevops36/enhancedcicd:latest > trivyimage.txt'
                }
            }
        }


         stage('Deploy Elements') {
            steps {
                script {
                    bat 'kubectl apply -f C:\\Users\\lenovo\\.jenkins\\jobs\\CI-CD\\workspace\\mysql-secrets.yaml'
                    bat 'kubectl apply -f C:\\Users\\lenovo\\.jenkins\\jobs\\CI-CD\\workspace\\mysql-configMap.yaml'
                    bat 'kubectl apply -f C:\\Users\\lenovo\\.jenkins\\jobs\\CI-CD\\workspace\\mysql-pvm-pvmc.yaml'
                    bat 'kubectl apply -f C:\\Users\\lenovo\\.jenkins\\jobs\\CI-CD\\workspace\\db-deployment.yaml'
                    bat 'kubectl apply -f C:\\Users\\lenovo\\.jenkins\\jobs\\CI-CD\\workspace\\app-deployment.yaml'
                }
            }
        }
    }
 }